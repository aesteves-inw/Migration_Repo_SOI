<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="4" failed="1" ignored="0" total="20" passed="15">
  <reporter-output>
  </reporter-output>
  <suite name="SOI-150 Test Suite" duration-ms="138070" started-at="2020-02-27T14:48:59Z" finished-at="2020-02-27T14:51:17Z">
    <groups>
    </groups>
    <test name="SOI_150_TC1_MobileOrderIntake_MACD_Flow" duration-ms="44323" started-at="2020-02-27T14:48:59Z" finished-at="2020-02-27T14:49:43Z">
      <class name="delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow@6eebc39e]" name="beforeTest" is-config="true" duration-ms="7859" started-at="2020-02-27T14:48:59Z" finished-at="2020-02-27T14:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="step01()[pri:0, instance:delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow@6eebc39e]" name="step01" duration-ms="13026" started-at="2020-02-27T14:49:07Z" finished-at="2020-02-27T14:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step01 -->
        <test-method status="PASS" signature="step02()[pri:0, instance:delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow@6eebc39e]" name="step02" duration-ms="8421" started-at="2020-02-27T14:49:20Z" depends-on-methods="delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow.step01" finished-at="2020-02-27T14:49:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step02 -->
        <test-method status="PASS" signature="step03()[pri:0, instance:delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow@6eebc39e]" name="step03" duration-ms="4447" started-at="2020-02-27T14:49:28Z" depends-on-methods="delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow.step02" finished-at="2020-02-27T14:49:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step03 -->
        <test-method status="PASS" signature="step04()[pri:0, instance:delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow@6eebc39e]" name="step04" duration-ms="1262" started-at="2020-02-27T14:49:33Z" depends-on-methods="delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow.step03" finished-at="2020-02-27T14:49:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step04 -->
        <test-method status="PASS" signature="step05()[pri:0, instance:delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow@6eebc39e]" name="step05" duration-ms="1789" started-at="2020-02-27T14:49:34Z" depends-on-methods="delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow.step04" finished-at="2020-02-27T14:49:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step05 -->
        <test-method status="FAIL" signature="step06()[pri:0, instance:delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow@6eebc39e]" name="step06" duration-ms="2701" started-at="2020-02-27T14:49:36Z" depends-on-methods="delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow.step05" finished-at="2020-02-27T14:49:38Z">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[Test Failed on Step 6]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: Test Failed on Step 6
at delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow.step06(SOI_150_TC1_MobileOrderIntake_MACD_Flow.java:324)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=80.0.3987.122)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'INNOWAVE-383', ip: '192.168.100.249', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_212'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.122, chrome: {chromedriverVersion: 80.0.3987.16 (320f6526c1632..., userDataDir: C:\Users\luis.achas\AppData...}, goog:chromeOptions: {debuggerAddress: localhost:57529}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: d58caf1146b0062eb6ecc8517ae5f5a2
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow.step06(SOI_150_TC1_MobileOrderIntake_MACD_Flow.java:285)
... 25 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step06 -->
        <test-method status="SKIP" signature="step07()[pri:0, instance:delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow@6eebc39e]" name="step07" duration-ms="0" started-at="2020-02-27T14:49:38Z" depends-on-methods="delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow.step06" finished-at="2020-02-27T14:49:38Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SOI_150_TC1_MobileOrderIntake_MACD_Flow.step07()[pri:0, instance:delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow@6eebc39e] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SOI_150_TC1_MobileOrderIntake_MACD_Flow.step07()[pri:0, instance:delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow@6eebc39e] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step07 -->
        <test-method status="SKIP" signature="step08()[pri:0, instance:delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow@6eebc39e]" name="step08" duration-ms="0" started-at="2020-02-27T14:49:38Z" depends-on-methods="delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow.step07" finished-at="2020-02-27T14:49:38Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SOI_150_TC1_MobileOrderIntake_MACD_Flow.step08()[pri:0, instance:delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow@6eebc39e] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SOI_150_TC1_MobileOrderIntake_MACD_Flow.step08()[pri:0, instance:delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow@6eebc39e] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step08 -->
        <test-method status="SKIP" signature="step09()[pri:0, instance:delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow@6eebc39e]" name="step09" duration-ms="0" started-at="2020-02-27T14:49:38Z" depends-on-methods="delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow.step08" finished-at="2020-02-27T14:49:38Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SOI_150_TC1_MobileOrderIntake_MACD_Flow.step09()[pri:0, instance:delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow@6eebc39e] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SOI_150_TC1_MobileOrderIntake_MACD_Flow.step09()[pri:0, instance:delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow@6eebc39e] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step09 -->
        <test-method status="SKIP" signature="step10()[pri:0, instance:delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow@6eebc39e]" name="step10" duration-ms="0" started-at="2020-02-27T14:49:38Z" depends-on-methods="delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow.step09" finished-at="2020-02-27T14:49:38Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SOI_150_TC1_MobileOrderIntake_MACD_Flow.step10()[pri:0, instance:delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow@6eebc39e] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SOI_150_TC1_MobileOrderIntake_MACD_Flow.step10()[pri:0, instance:delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow@6eebc39e] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step10 -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow@6eebc39e]" name="afterTest" is-config="true" duration-ms="4731" started-at="2020-02-27T14:49:38Z" finished-at="2020-02-27T14:49:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- delivery01.soi_150.SOI_150_TC1_MobileOrderIntake_MACD_Flow -->
    </test> <!-- SOI_150_TC1_MobileOrderIntake_MACD_Flow -->
    <test name="SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow" duration-ms="93700" started-at="2020-02-27T14:49:43Z" finished-at="2020-02-27T14:51:17Z">
      <class name="delivery01.soi_150.SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:delivery01.soi_150.SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow@1ed4004b]" name="beforeTest" is-config="true" duration-ms="5824" started-at="2020-02-27T14:49:43Z" finished-at="2020-02-27T14:49:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="step01()[pri:0, instance:delivery01.soi_150.SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow@1ed4004b]" name="step01" duration-ms="7885" started-at="2020-02-27T14:49:49Z" finished-at="2020-02-27T14:49:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step01 -->
        <test-method status="PASS" signature="step02()[pri:0, instance:delivery01.soi_150.SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow@1ed4004b]" name="step02" duration-ms="6928" started-at="2020-02-27T14:49:57Z" depends-on-methods="delivery01.soi_150.SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow.step01" finished-at="2020-02-27T14:50:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step02 -->
        <test-method status="PASS" signature="step03()[pri:0, instance:delivery01.soi_150.SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow@1ed4004b]" name="step03" duration-ms="3194" started-at="2020-02-27T14:50:04Z" depends-on-methods="delivery01.soi_150.SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow.step02" finished-at="2020-02-27T14:50:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step03 -->
        <test-method status="PASS" signature="step04()[pri:0, instance:delivery01.soi_150.SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow@1ed4004b]" name="step04" duration-ms="1226" started-at="2020-02-27T14:50:07Z" depends-on-methods="delivery01.soi_150.SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow.step03" finished-at="2020-02-27T14:50:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step04 -->
        <test-method status="PASS" signature="step05()[pri:0, instance:delivery01.soi_150.SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow@1ed4004b]" name="step05" duration-ms="1297" started-at="2020-02-27T14:50:08Z" depends-on-methods="delivery01.soi_150.SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow.step04" finished-at="2020-02-27T14:50:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step05 -->
        <test-method status="PASS" signature="step06()[pri:0, instance:delivery01.soi_150.SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow@1ed4004b]" name="step06" duration-ms="3271" started-at="2020-02-27T14:50:10Z" depends-on-methods="delivery01.soi_150.SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow.step05" finished-at="2020-02-27T14:50:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step06 -->
        <test-method status="PASS" signature="step07()[pri:0, instance:delivery01.soi_150.SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow@1ed4004b]" name="step07" duration-ms="49562" started-at="2020-02-27T14:50:13Z" depends-on-methods="delivery01.soi_150.SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow.step06" finished-at="2020-02-27T14:51:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step07 -->
        <test-method status="PASS" signature="step08()[pri:0, instance:delivery01.soi_150.SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow@1ed4004b]" name="step08" duration-ms="2567" started-at="2020-02-27T14:51:02Z" depends-on-methods="delivery01.soi_150.SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow.step07" finished-at="2020-02-27T14:51:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step08 -->
        <test-method status="PASS" signature="step09()[pri:0, instance:delivery01.soi_150.SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow@1ed4004b]" name="step09" duration-ms="2653" started-at="2020-02-27T14:51:05Z" depends-on-methods="delivery01.soi_150.SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow.step08" finished-at="2020-02-27T14:51:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step09 -->
        <test-method status="PASS" signature="step10()[pri:0, instance:delivery01.soi_150.SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow@1ed4004b]" name="step10" duration-ms="4117" started-at="2020-02-27T14:51:08Z" depends-on-methods="delivery01.soi_150.SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow.step09" finished-at="2020-02-27T14:51:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step10 -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:delivery01.soi_150.SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow@1ed4004b]" name="afterTest" is-config="true" duration-ms="5148" started-at="2020-02-27T14:51:12Z" finished-at="2020-02-27T14:51:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- delivery01.soi_150.SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow -->
    </test> <!-- SOI_150_TC4_PC_MobileOrderIntake_MACD_Flow -->
  </suite> <!-- SOI-150 Test Suite -->
</testng-results>
